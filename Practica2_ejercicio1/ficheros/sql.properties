# OPERACIONES TABLA USUARIO

# 1- CREACION DE LA TABLA USUARIO

CreacionTablaUsuario: CREATE TABLE `USUARIO` (`ID` INT NULL AUTO_INCREMENT,`CORREO` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL,`NOMBRE` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL,`APELLIDO1` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL ,`APELLIDO2` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL ,`NICK` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL ,`ROL` ENUM( 'administrador', 'espectador' ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL ,PRIMARY KEY (ID),UNIQUE ( `CORREO` )) TYPE = INNODB CHARACTER SET utf8 COLLATE utf8_spanish_ci COMMENT = 'TABLA DE USUARIO';

# 2- ELIMINACION DE LA TABLA USUARIO

EliminacionTablaUsuario: DROP TABLE USUARIO

# 3- Consultar todos los usuarios de la base de datos

ConsultarUsuarios: SELECT * FROM `USUARIO`; 

# 4- Insertar un usuario

InsertarUsuario: INSERT INTO `USUARIO` (`CORREO`,`NOMBRE`,`APELLIDO1`,`APELLIDO2`,`NICK`,`ROL`) VALUES (?,?,?,?,?,?);

# 5. Obtencion datos de un usuario

ObtencionUsuario: SELECT * FROM USUARIO WHERE CORREO = ?;

#####################################################################

# OPERACIONES TABLA CRITICA

# 1. CREAR TABLA CRITICA

CreacionTablaCritica: CREATE TABLE `CRITICA` (`ID` INT NULL AUTO_INCREMENT,`TITULO` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL ,`RESENA` VARCHAR(900) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL ,`AUTOR` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL ,PRIMARY KEY ( `ID`) ,INDEX (AUTOR),FOREIGN KEY (AUTOR) REFERENCES USUARIO (CORREO)) TYPE = INNODB CHARACTER SET utf8 COLLATE utf8_spanish_ci COMMENT = 'TABLA DE UNA CRITICA';

# 2- ELIMINACION DE LA TABLA CRITICA

EliminacionTablaCritica: DROP TABLE CRITICA

# 3- OBTENCION DE LAS CRITICAS REGISTRADAS

ObtencionCriticas: SELECT * FROM CRITICA;

# 4- INSERCION DE UNA CRITICA

InsercionCritica: INSERT INTO CRITICA (TITULO,RESENA,AUTOR) VALUES (?,?,?);

# 5- BUSQUEDA CRITICA POR TITULO

BusquedaCriticaTitulo: SELECT * FROM CRITICA WHERE TITULO = ?;

# 6. ELIMINAR UNA CRITICA EN FUNCION DE SU TITULO

EliminacionCriticaIdentificador: DELETE FROM CRITICA WHERE ID = ?;

############################################################################################################################################################

# OPERACIONES DE LA TABLA DE RELACIONES DE LAS TABLAS USUARIO Y CRITICA

# 1. CREACION TABLA USUARIO-CRITICA

CreacionTablaUsuarioCritica: CREATE TABLE `USUARIO_CRITICA` (`ID` INT NULL AUTO_INCREMENT,`ID_CRITICA` INT NOT NULL ,`ID_AUTOR` INT NOT NULL ,`PUNTUACION` INT NULL,PRIMARY KEY (ID),FOREIGN KEY (ID_CRITICA) REFERENCES CRITICA (ID),FOREIGN KEY (ID_AUTOR) REFERENCES USUARIO (ID)) TYPE = INNODB CHARACTER SET utf8 COLLATE utf8_spanish_ci COMMENT = 'TABLA RELACION USUARIO Y CRITICA';

# 2. ELIMINACION TABLA USUARIO-CRITICA

EliminacionTablaUsuarioCritica: DROP TABLE USUARIO_CRITICA`

# 3. INSERCION DE UNA VALORACION DE UTILIDAD DE UNA CRITICA

InsercionValoracionUtilidadCritica: INSERT INTO USUARIO_CRITICA (ID_CRITICA,ID_AUTOR,VALORACION_UTILIDAD) VALUES (?,?,?);

# 4. ELIMINACION DE LA VALORACION DE UTILIDAD DE UNA CRITICA

EliminacionValoracionUtilidadCritica: DELETE FROM USUARIO_CRITICA WHERE ID_CRITICA = ?; 

# 5. OBTENEMOS LAS VALORACIONES DE UTILIDAD DE UNA CRITICA

ObtencionValoracionesCritica: SELECT * FROM USUARIO_CRITICA WHERE ID_CRITICA = ?;

##################################################################################################################################################################

# OPERACIONES DE LA TABLA ESPECTACULO

# 1. CREACION DE LA TABLA ESPECTACULO

CreacionTablaEspectaculo: CREATE TABLE `ESPECTACULO` (`ID` INT NULL AUTO_INCREMENT,`TITULO` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL,`TIPO` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL ,`DESCRIPCION` VARCHAR(900) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL ,`CATEGORIA` ENUM ('CONCIERTO', 'MONOLOGO', 'OBRA TEATRO') CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL,`LOCALIDADES` INT NULL DEFAULT '0',PRIMARY KEY ( `ID`) ,UNIQUE (TITULO)) TYPE = INNODB CHARACTER SET utf8 COLLATE utf8_spanish_ci COMMENT = 'TABLA DE UN ESPECTACULO';

# 2. ELIMINACION DE LA TABLA ESPECTACULO

EliminacionTablaEspectaculo: DROP TABLE `ESPECTACULO` 

# 3. CREACION NUEVO ESPECTACULO

InsercionEspectaculoComun: INSERT INTO `ESPECTACULO` (`TITULO`, `TIPO` , `DESCRIPCION` , `CATEGORIA` , `LOCALIDADES` ) VALUES (?,?,?,?,?);

# 4. OBTENCION DE LOS DATOS DE LOS ESPECTACULOS

ObtencionEspectaculos: SELECT * FROM `ESPECTACULO`;

# 5. OBTENCION DATOS DE UN ESPECTACULO EN FUNCION DE SU TITULO

ObtencionEspectaculoTitulo: SELECT * FROM ESPECTACULO WHERE TITULO = ?;

# 6. OBTENCION DATOS ESPECTACULO EN FUNCION DE SU IDENTIFICADOR

ObtencionEspectaculoIdentificador: SELECT * FROM ESPECTACULO WHERE ID = ?;

# 7. ELIMINACION DE LOS DATOS DE UN ESPECTACULO EN FUNCION DE SU IDENTIFICADOR

EliminacionEspectaculo: DELETE FROM ESPECTACULO WHERE ID = ?;

##########################################################################################################################################

# OPERACIONES DE LA TABLA SESION

CreacionTablaSesion: CREATE TABLE `SESION` (`ID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY , `TITULO_ESPECTACULO` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL , `DIA_SESION` INT NULL , `MES_SESION` INT NULL , `ANO_SESION` INT NULL , `HORA_SESION` INT NULL , `MINUTOS_SESION` INT NULL , `DIA_SEMANA_SESION` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NULL, `VENTAS` INT NULL DEFAULT '0' , INDEX ( `TITULO_ESPECTACULO` ), FOREIGN KEY(TITULO_ESPECTACULO) REFERENCES ESPECTACULO(TITULO) ) TYPE = INNODB CHARACTER SET utf8 COLLATE utf8_spanish_ci COMMENT = 'TABLA DE EVENTOS DE UN ESPECTACULO';

EliminacionTablaSesion: DROP TABLE SESION; 

ObtencionSesionesEspectaculo: SELECT * FROM SESION WHERE TITULO_ESPECTACULO = ?;

RegistrarSesionEspectaculoPuntual: INSERT INTO SESION (TITULO_ESPECTACULO,DIA_SESION,MES_SESION,ANO_SESION,HORA_SESION,MINUTOS_SESION,VENTAS) VALUES (?,?,?,?,?,?,?);

RegistrarSesionesEspectaculo: INSERT INTO SESION (TITULO_ESPECTACULO,HORA_SESION,MINUTOS_SESION,DIA_SEMANA_SESION,VENTAS) VALUES (?,?,?,?,?);

CancelarSesion: DELETE FROM SESION WHERE ID=?;

CancelarSesiones: DELETE FROM SESION WHERE TITULO_ESPECTACULO = ?;
###########################################################################################################################################

# OPERACIONES DE LA TABLA RELACION ESPECTACULO-CRITICA

CreacionTablaEspectaculoCritica: CREATE TABLE `ESPECTACULO_CRITICA` (`ID` INT NULL AUTO_INCREMENT,`ID_CRITICA` INT NOT NULL ,`TITULO_ESPECTACULO` VARCHAR( 64 ) CHARACTER SET utf8 COLLATE utf8_spanish_ci NOT NULL ,`PUNTUACION` INT NOT NULL DEFAULT '0' ,PRIMARY KEY ( ID ),FOREIGN KEY (ID_CRITICA) REFERENCES CRITICA(ID),FOREIGN KEY (TITULO_ESPECTACULO) REFERENCES ESPECTACULO(TITULO)) TYPE = INNODB CHARACTER SET utf8 COLLATE utf8_spanish_ci COMMENT = 'TABLA RELACION CRITICA Y ESPECTACULO';

# 2. BORRAR LA TABLA ESPECTACULO_CRITICA

BorrarTablaEspectaculoCritica: DROP TABLE 'ESPECTACULO_CRITICA'

# 3. CREAR PUNTUACION DE UN ESPECTACULO

InsercionPuntuacionEspectaculo: INSERT INTO ESPECTACULO_CRITICA (ID_CRITICA,TITULO_ESPECTACULO,PUNTUACION) VALUES (?,?,?); 

# 4. ELIMINACION DE LA PUNTUACION DEL ESPECTACULO EN FUNCION DE LA CRITICA

EliminacionPuntuacionEspectaculo_Critica: DELETE FROM ESPECTACULO_CRITICA WHERE ID_CRITICA = ?;

# 5. OBTENCION DE LOS DATOS DE LA PUNTUACION DE UNA CRITICA

ObtencionPuntuacionCritica: SELECT * FROM `ESPECTACULO_CRITICA` WHERE `ID_CRITICA` = ?;
